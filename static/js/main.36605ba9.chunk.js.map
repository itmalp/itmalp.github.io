{"version":3,"sources":["components/notFound/error404.jsx","actions/types.js","actions/desktopActions.js","actions/fileSystemActions.js","assets/icons/dropdown.svg","actions/activityActions.js","components/desktop/dialogBox/dialogBox.jsx","components/desktop/taskbar/taskList.jsx","components/desktop/taskbar/date.jsx","assets/icons/brightness.svg","components/desktop/dropdown/dropdown.jsx","assets/icons/wifi.svg","assets/icons/battery.svg","assets/icons/lighting.svg","assets/icons/dropdown-white.svg","components/desktop/taskbar/RightTaskPane.jsx","components/desktop/taskbar/taskbar.jsx","components/desktop/powerOff/powerOff.jsx","assets/icons/terminal.svg","assets/icons/setting.svg","assets/icons/camera.svg","components/applications/terminal/terminal.jsx","assets/icons/search.svg","assets/icons/home.svg","assets/background/wall-1.svg","assets/background/wall-2.svg","assets/background/wall-3.svg","assets/background/wall-4.svg","assets/background/wall-5.svg","assets/background/wall-6.svg","components/applications/settings/components/ThemeChanger.jsx","components/applications/settings/components/FontChanger.jsx","components/common/ToggleButton.jsx","components/applications/settings/components/Personalise.jsx","components/applications/settings/settings.jsx","assets/icons/accops.svg","assets/icons/view_timeline.svg","assets/icons/vmeet.svg","assets/icons/archive.svg","actions/defaultApps.js","assets/icons/octocat.svg","assets/icons/gitlab.svg","actions/createActivityAction.js","components/desktop/lowerDesktop/navItem.jsx","components/desktop/desktopWorkingArea/desktopIcon.jsx","components/desktop/desktopWorkingArea/ContextMenu.jsx","assets/icons/file.svg","components/desktop/explorer/explorer.jsx","components/applications/textEditor/textEditor.jsx","assets/icons/folder.svg","components/desktop/desktopWorkingArea/desktopWorkingArea.jsx","components/desktop/startMenu/startItem.jsx","components/desktop/startMenu/startMenu.jsx","components/desktop/lowerDesktop/lowerDesktop.jsx","components/desktop/Desktop.jsx","reducers/activityReducers.js","reducers/desktopReducers.js","reducers/fileSystemReducers.js","assets/icons/profile.svg","assets/icons/project.svg","assets/icons/browser.svg","assets/icons/downcenter.svg","assets/icons/watch.svg","assets/icons/calendar.svg","reducers/combinedReducers.js","store.js","routes.jsx","serviceWorkerRegistration.js","index.js"],"names":["Error404","state","Component","BACK_IMAGE_CHANGE","BRIGHTNESS_CHANGE","DATE_STATUS","TOGGLE_DROP_DOWN","BATTERY_STATUS","ONLINE_STATUS","NETWORK_TYPE","POWER_OFF_STATUS","RESET_TO_DEFAULT","FONT_STYLE_CHANGE","SINGLE_CLICK_ICON_CHANGE","TOGGLE_FULL_SCREEN","TOGGLE_START_MENU","CREATE_ACTIVITY","REMOVE_ACTIVITY","UPDATE_ZINDEX_ACTIVITY","ACTIVITY_TOGGLE_DROP_DOWN","TOGGLE_ACTIVITY_MAXIMISE","TOGGLE_LOADING_ACTIVITY","UPDATE_ACTIVITY_POSITION","UPDATE_ACTIVITY_DIMENSION","UPDATE_ACTIVITY_TRIGGER","REMOVE_ACTIVITY_TRIGGER","MAKE_DIRECTORY_IN_SYSTEM","REMOVE_DIRECTORY_IN_SYSTEM","MAKE_FILE_IN_SYSTEM","CHANGE_TEXT_IN_FILE","PREVIOUS_STATE_SET","changeBackImage","payload","dispatch","a","type","actions","background","console","log","changeStartMenu","startMenuOpen","changeFontStyle","fontStyle","toggleFullScreen","resetToDefault","localStorage","clear","dropDownToggle","dropDownOpen","err","activityDropDownToggle","activityDropDown","makeDirectoryAction","removeActivity","activityIndex","isTriggered","isLoading","setTimeout","DialogBox","onSuccess","onCancel","heading","body","isOpen","successText","className","onClick","connect","activityList","activityReducers","activity","desktopReducers","useState","activityName","setActivityName","dialogOpen","setDialogOpen","showDialog","name","setIsLoading","useEffect","indexTrue","findIndex","e","height","width","src","DropDownCaret","alt","length","map","index","date","formatter","val","getDay","getMonth","getDate","getHours","getMinutes","brightness","battery","isOnline","networkType","isFullScreen","changeBrightness","powerOffStatus","active","timer","powerOff","isPowerDialogOpen","setPowerDialog","togglePowerDialog","Brightness","min","max","value","onChange","target","style","backgroundColor","charging","parseInt","level","batteryStatus","onlineStatus","dateStatus","getStatus","navigator","getBattery","batteryObj","onLine","connection","mozConnection","webkitConnection","effectiveType","Date","Wifi","Charging","Battery","Taskbar","backImage","isActive","setIsActive","window","close","cover","backgroundImage","img","OutputDivision","inputPath","command","error","success","startState","fileSystem","fileSystemReducers","removeDirectoryAction","terminalLocation","supplement","printOutput","outputCommand","setCommandOutput","commandOutput","setInputPath","historyCommands","setHistoryCommand","historyIndex","setHistoryIndex","TextRef","useRef","HelpTerminal","childParameter","commandList","com","Fragment","invoke","description","onActive","pathArray","split","filter","paths","currentDir","forEach","path","find","system","child","tokens","focusTextRef","current","focus","innerPath","join","OutputComp","contentEditable","suppressContentEditableWarning","ref","onKeyDown","keyCode","innerText","trim","replace","isSudo","commandObj","toLowerCase","lastIndex","themeArray","useMemo","Back1","Back2","Back3","Back4","Back5","Back6","theme","font","fontStyleArray","ToggleButton","toggleOn","toggleAction","singleClickIcon","changeSingleClickIcon","settingIndex","setSettingIndex","isDialogOpen","setIsDialogOpen","settingsArray","component","settings","width1","width2","width3","applications","allApplications","image","SettingsImage","bigWidth","key","TerminalImage","socialApps","accops","link","vmeet","defaultApps","createActivity","newApp","footer","app","isExplorerOpened","isMaximise","zIndex","top","left","triggeredFunction","NavItem","children","clickTask","hightlight","icon","onDoubleClick","margin","ContextMenu","contextArray","contextMenuRef","addEventListener","contains","context","updateZIndexActivity","toggleActivityMaximise","updatePositionActivity","updateDimensionActivity","explorerIndex","explorerRef","elementToDrag","dragElement","useCallback","pos1","pos2","pos3","pos4","dragMouseDown","event","preventDefault","clientX","clientY","document","onmouseup","closeDragElement","onmousemove","elementDrag","elementHeight","offsetHeight","elementWidth","offsetWidth","elementTopOffset","offsetTop","elementLeftOffset","offsetLeft","topVal","leftVal","windowHeight","innerHeight","windowWidth","innerWidth","toggleMaximise","onMouseDown","fileImage","x","y","fill","strokeWidth","stroke","changeTextInFile","textAreaRef","text","setText","curDir","location","changedFile","sys","LinkFooter","href","rel","IframeContainer","title","isStartMenuOpen","fileSystems","makeFileAction","desktopWorkingRef","open","isFolder","newDir","setNewDir","contextShown","setContextShown","resetSettingsOpen","setResetSettingsOpen","contextPosition","setContextPosition","workingAreaHeight","setWorkingAreaHeight","clientHeight","iconChanger","FOLDER_IMAGE","FILE_IMAGE","posX","posY","winWidth","winHeight","renderDesktopIcons","allIcons","desktopIconHTML","outerIconsArray","desktopIcons","numberOfIcons","numOfSplits","Math","ceil","i","arr","splice","push","desktopIcon","ind","inPage","startTask","folderName","fileName","alert","placeholder","StartItem","searchRef","searchString","setSearchString","applicationArray","setApplicationArray","startSection","setStartSection","focusOnField","searchedApps","RegExp","test","SEARCH_ICON","startItemClick","hightlightApp","isShown","act","cx","cy","previousStateSet","backgroundArray","bodyE","documentElement","requestFullscreen","msRequestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","exitFullscreen","webkitExitFullscreen","msExitFullscreen","fullScrrenToggle","initialState","triggerIndex","action","localSave","setItem","JSON","stringify","previousState","parse","getItem","newState","ARCHIVE_IMAGE","newFolder","newFile","newDirectory","dir","combineReducers","middleware","thunk","store","createStore","rootReducer","applyMiddleware","Router","StrictMode","exact","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","catch","ReactDOM","render","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.36605ba9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Error404 extends Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <h1>We are experiencing Some Technical Issues, We Will be Back to Soon!</h1>\n      </>\n    );\n  }\n}\n\nexport default Error404;\n","// Desktop Types\nexport const BACK_IMAGE_CHANGE = \"BACK_IMAGE_CHANGE\";\nexport const BRIGHTNESS_CHANGE = \"BRIGHTNESS_CHANGE\";\nexport const DATE_STATUS = \"DATE_STATUS\";\nexport const TOGGLE_DROP_DOWN = \"TOGGLE_DROP_DOWN\";\nexport const BATTERY_STATUS = \"BATTERY_STATUS\";\nexport const ONLINE_STATUS = \"ONLINE_STATUS\";\nexport const NETWORK_TYPE = \"NETWORK_TYPE\";\nexport const POWER_OFF_STATUS = \"POWER_OFF_STATUS\";\nexport const RESET_TO_DEFAULT = \"RESET_TO_DEFAULT\";\nexport const FONT_STYLE_CHANGE = \"FONT_STYLE_CHANGE\";\nexport const SINGLE_CLICK_ICON_CHANGE = \"SINGLE_CLICK_ICON_CHANGE\";\nexport const TOGGLE_FULL_SCREEN = \"TOGGLE_FULL_SCREEN\";\nexport const TOGGLE_START_MENU = \"TOGGLE_START_MENU\";\n\n// Activities Types\nexport const CREATE_ACTIVITY = \"CREATE_ACTIVITY\";\nexport const REMOVE_ACTIVITY = \"REMOVE_ACTIVITY\";\nexport const UPDATE_ZINDEX_ACTIVITY = \"UPDATE_ZINDEX_ACTIVITY\";\nexport const ACTIVITY_TOGGLE_DROP_DOWN = \"ACTIVITY_TOGGLE_DROP_DOWN\";\nexport const TOGGLE_ACTIVITY_MAXIMISE = \"TOGGLE_ACTIVITY_MAXIMISE\";\nexport const TOGGLE_LOADING_ACTIVITY = \"TOGGLE_LOADING_ACTIVITY\";\nexport const UPDATE_ACTIVITY_POSITION = \"UPDATE_ACTIVITY_POSITION\";\nexport const UPDATE_ACTIVITY_DIMENSION = \"UPDATE_ACTIVITY_DIMENSION\";\nexport const UPDATE_ACTIVITY_TRIGGER = \"UPDATE_ACTIVITY_TRIGGER\";\nexport const REMOVE_ACTIVITY_TRIGGER = \"REMOVE_ACTIVITY_TRIGGER\";\n\n// File System Types\nexport const MAKE_DIRECTORY_IN_SYSTEM = \"MAKE_DIRECTORY_IN_SYSTEM\";\nexport const REMOVE_DIRECTORY_IN_SYSTEM = \"REMOVE_DIRECTORY_IN_SYSTEM\";\nexport const MAKE_FILE_IN_SYSTEM = \"MAKE_FILE_IN_SYSTEM\";\nexport const CHANGE_TEXT_IN_FILE = \"CHANGE_TEXT_IN_FILE\";\nexport const PREVIOUS_STATE_SET = \"PREVIOUS_STATE_SET\";\n","import * as actions from \"./types\";\n\nexport const changeBackImage = (payload) => async (dispatch) => {\n  try {\n    await dispatch({\n      type: actions.BACK_IMAGE_CHANGE,\n      payload: {\n        background: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const changeStartMenu = (payload) => async (dispatch) => {\n  try {\n    await dispatch({\n      type: actions.TOGGLE_START_MENU,\n      payload: {\n        startMenuOpen: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const changeSingleClickIcon = (payload) => async (dispatch) => {\n  try {\n    await dispatch({\n      type: actions.SINGLE_CLICK_ICON_CHANGE,\n      payload: {\n        singleClickIcon: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const changeFontStyle = (payload) => async (dispatch) => {\n  try {\n    await dispatch({\n      type: actions.FONT_STYLE_CHANGE,\n      payload: {\n        fontStyle: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const toggleFullScreen = () => async (dispatch) => {\n  try {\n    await dispatch({ type: actions.TOGGLE_FULL_SCREEN });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const resetToDefault = () => async (dispatch) => {\n  try {\n    localStorage.clear();\n    await dispatch({ type: actions.RESET_TO_DEFAULT });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const changeBrightness = (payload) => async (dispatch) => {\n  try {\n    await dispatch({\n      type: actions.BRIGHTNESS_CHANGE,\n      payload: {\n        brightness: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const dropDownToggle = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.TOGGLE_DROP_DOWN,\n      payload: {\n        dropDownOpen: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const activityDropDownToggle = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.ACTIVITY_TOGGLE_DROP_DOWN,\n      payload: {\n        activityDropDown: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const batteryStatus = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.BATTERY_STATUS,\n      payload: {\n        battery: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const onlineStatus = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.ONLINE_STATUS,\n      payload: {\n        isOnline: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const networkType = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.NETWORK_TYPE,\n      payload: {\n        networkType: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const dateStatus = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.DATE_STATUS,\n      payload: {\n        date: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const powerOffStatus = (payload) => async (dispatch) => {\n  try {\n    const { active, timer } = payload;\n    dispatch({\n      type: actions.POWER_OFF_STATUS,\n      payload: {\n        powerOff: {\n          active,\n          timer,\n        },\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import * as actions from \"./types\";\n\nexport const makeDirectoryAction = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.MAKE_DIRECTORY_IN_SYSTEM,\n      payload,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const makeFileAction = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.MAKE_FILE_IN_SYSTEM,\n      payload,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const removeDirectoryAction = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.REMOVE_DIRECTORY_IN_SYSTEM,\n      payload,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const changeTextInFile = (payload) => async (dispatch) => {\n  try {\n    dispatch({ type: actions.CHANGE_TEXT_IN_FILE, payload });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const previousStateSet = () => async (dispatch) => {\n  try {\n    await dispatch({ type: actions.PREVIOUS_STATE_SET });\n  } catch (err) {\n    console.log(err);\n  }\n};\n","export default __webpack_public_path__ + \"static/media/dropdown.03b70c89.svg\";","import * as actions from \"./types\";\n\nexport const removeActivity = (payload) => async (dispatch) => {\n  try {\n    await dispatch({\n      type: actions.UPDATE_ACTIVITY_TRIGGER,\n      payload: { activityIndex: payload, isTriggered: true },\n    });\n    await dispatch({\n      type: actions.TOGGLE_LOADING_ACTIVITY,\n      payload: { activityIndex: payload, isLoading: true },\n    });\n    setTimeout(async () => {\n      await dispatch({\n        type: actions.TOGGLE_LOADING_ACTIVITY,\n        payload: { activityIndex: payload, isLoading: true },\n      });\n      await dispatch({\n        type: actions.REMOVE_ACTIVITY,\n        payload: {\n          activityIndex: payload,\n        },\n      });\n      await dispatch({ type: actions.REMOVE_ACTIVITY_TRIGGER });\n    }, 100);\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const toggleActivityMaximise = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.TOGGLE_ACTIVITY_MAXIMISE,\n      payload,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateZIndexActivity = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.UPDATE_ZINDEX_ACTIVITY,\n      payload: {\n        activityIndex: payload,\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const toggleActivityLoading = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.TOGGLE_LOADING_ACTIVITY,\n      payload,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updatePositionActivity = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.UPDATE_ACTIVITY_POSITION,\n      payload,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateDimensionActivity = (payload) => async (dispatch) => {\n  try {\n    dispatch({\n      type: actions.UPDATE_ACTIVITY_DIMENSION,\n      payload,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from \"react\";\nimport \"../../../assets/desktop/dialogBox.css\";\n\nconst DialogBox = ({\n  onSuccess,\n  onCancel,\n  heading,\n  body,\n  isOpen,\n  successText,\n}) => {\n  if (isOpen)\n    return (\n      <>\n        <div className=\"dialog-overlay\" onClick={onCancel}></div>\n        <div className=\"dialog-container\">\n          <div className=\"dialog-header\">\n            {heading ? heading : \"Confirmation\"}\n          </div>\n          <div className=\"dialog-body\">{body ? body : \"Are You Sure?\"}</div>\n          <div className=\"dialog-footer\">\n            <div className=\"dialog-footer-btn\" onClick={onCancel}>\n              Cancel\n            </div>\n            <div className=\"dialog-footer-btn\" onClick={onSuccess}>\n              {successText ? successText : \"Proceed\"}\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  else return null;\n};\n\nexport default DialogBox;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport DropDownCaret from '../../../assets/icons/dropdown.svg';\nimport { removeActivity } from '../../../actions/activityActions';\nimport { activityDropDownToggle } from '../../../actions/desktopActions';\nimport DialogBox from '../dialogBox/dialogBox';\nimport '../../../assets/desktop/taskList.css';\n\nconst TaskList = ({\n  removeActivity,\n  activityList,\n  activityDropDown,\n  activityDropDownToggle,\n}) => {\n  const [activityName, setActivityName] = useState('');\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const showDialog = (name, isOpen) => {\n    setActivityName(name);\n    setDialogOpen(isOpen);\n  };\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    let indexTrue = activityList.findIndex((e) => e.isLoading === true);\n    if (indexTrue !== -1) setIsLoading(true);\n    else setIsLoading(false);\n  }, [activityList]);\n  const toggleActivity = () => {\n    let activityIndex = activityList.findIndex(\n      (activity) => activity && activity.name === activityName\n    );\n    removeActivity(activityIndex);\n    setDialogOpen(false);\n  };\n\n  return (\n    <>\n      <DialogBox\n        onSuccess={toggleActivity}\n        onCancel={() => showDialog('', false)}\n        isOpen={dialogOpen}\n        successText={'End Task'}\n        heading={activityName}\n        body={'Are you sure, you want to end the task?'}\n      />\n      <div className=\"task-list-container\">\n        <div className=\"heading centralise\">Tasks</div>\n        <div\n          className={`task-listing-activity cursor-pointer ${\n            activityDropDown ? 'task-listing-activity-active' : ''\n          }`}\n          onClick={() => activityDropDownToggle(!activityDropDown)}\n        >\n          {isLoading && (\n            <div className=\"centralise\">\n              <svg height=\"16px\" width=\"16px\" className=\"loader-rotate\">\n                <circle className=\"loader-sm-2\" />\n              </svg>\n            </div>\n          )}\n          <div className=\"activity-list-nav-grid\">\n            <div className=\"centralise\">Activity List</div>\n            <div className=\"centralise\">\n              <div className=\"down-caret-arrow-translate\">▾</div>\n            </div>\n          </div>\n        </div>\n        {activityDropDown && (\n          <>\n            <div className=\"drop-down-container activity-list-container\">\n              <div className=\"drop-drop-caret-pointed-container flex-end\">\n                <div></div>\n                <img\n                  src={DropDownCaret}\n                  className=\"drop-drop-caret-pointed\"\n                  width=\"13px\"\n                  alt=\"drop down\"\n                />\n              </div>\n              <div className=\"drop-down-inner-container activity-inner-container\">\n                {activityList.length ? (\n                  activityList.map(\n                    (activity, index) =>\n                      activity && (\n                        <div\n                          className=\"drop-down-items\"\n                          key={`activity-${index}`}\n                        >\n                          <div className=\"task-list-inner-grid\">\n                            {activity.isLoading ? (\n                              <svg\n                                height=\"20px\"\n                                width=\"20px\"\n                                className=\"loader-rotate\"\n                              >\n                                <circle className=\"loader-sm\" />\n                              </svg>\n                            ) : (\n                              <span></span>\n                            )}\n                            <div className=\"centralise\">{activity.name}</div>\n                            <div\n                              className=\"centralise activity-close-btn\"\n                              onClick={() => showDialog(activity.name, true)}\n                            >\n                              &times;\n                            </div>\n                          </div>\n                        </div>\n                      )\n                  )\n                ) : (\n                  <div className=\"drop-down-items\">No Activity</div>\n                )}\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  activityList: state.activityReducers.activity,\n  activityDropDown: state.desktopReducers.activityDropDown,\n});\n\nexport default connect(mapStateToProps, {\n  removeActivity,\n  activityDropDownToggle,\n})(TaskList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst TaskDate = ({ date }) => {\n  const formatter = (val) => (val < 10 ? `0${val}` : val);\n  const weekList = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thr\", \"Fri\", \"Sat\", \"Sun\"];\n  const monthList = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  return (\n    <div className=\"centralise\">\n      {weekList[date.getDay()]}, {monthList[date.getMonth()]}{\" \"}\n      {formatter(date.getDate())}&nbsp;&nbsp;\n      {formatter(date.getHours())}:{formatter(date.getMinutes())}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  date: state.desktopReducers.date,\n});\n\nexport default connect(mapStateToProps)(TaskDate);\n","export default __webpack_public_path__ + \"static/media/brightness.df490e43.svg\";","import React, { useState } from \"react\";\nimport DropDownCaret from \"../../../assets/icons/dropdown.svg\";\nimport DialogBox from \"../dialogBox/dialogBox\";\nimport Brightness from \"../../../assets/icons/brightness.svg\";\nimport {\n  changeBrightness,\n  powerOffStatus,\n  toggleFullScreen,\n} from \"../../../actions/desktopActions\";\nimport { connect } from \"react-redux\";\nimport \"../../../assets/desktop/dropdown.css\";\n\nconst DropDown = ({\n  isOnline,\n  networkType,\n  battery,\n  changeBrightness,\n  brightness,\n  powerOffStatus,\n  isFullScreen,\n  toggleFullScreen,\n}) => {\n  const [isPowerDialogOpen, setPowerDialog] = useState(false);\n  const togglePowerDialog = () => setPowerDialog(!isPowerDialogOpen);\n  const closeWindow = () => powerOffStatus({ active: true, timer: 0 });\n  return (\n    <>\n      <DialogBox\n        onSuccess={closeWindow}\n        onCancel={togglePowerDialog}\n        isOpen={isPowerDialogOpen}\n        successText={\"Shut down\"}\n        heading={\"Shut Down\"}\n        body={\"Please confirm that you want to shut down?\"}\n      />\n      <div className=\"drop-down-container\">\n        <div className=\"drop-drop-caret-pointed-container\">\n          <img\n            src={DropDownCaret}\n            className=\"drop-drop-caret-pointed\"\n            width=\"20px\"\n            alt=\"drop down\"\n          />\n        </div>\n        <div className=\"drop-down-inner-container\">\n          <div className=\"drop-down-items no-cursor\">\n            <div className=\"drop-down-grid\">\n              <img src={Brightness} alt=\"brightness\" width=\"17px\" />\n              <div className=\"centralise\">\n                <input\n                  type=\"range\"\n                  min=\"40\"\n                  max=\"100\"\n                  className=\"brightness-scroll-line\"\n                  value={brightness * 100}\n                  onChange={(e) => changeBrightness(e.target.value / 100)}\n                ></input>\n              </div>\n            </div>\n          </div>\n          <div className=\"dropdown-hr\"></div>\n          <div className=\"drop-down-items\">\n            <div\n              className=\"network-dot\"\n              style={{\n                backgroundColor: `${isOnline ? \"rgba(0,255,0,0.5)\" : \"red\"}`,\n              }}\n            ></div>\n            {isOnline ? `Connected (${networkType})` : \"Not Connected\"}\n          </div>\n          <div className=\"drop-down-items\">\n            <div\n              className=\"network-dot\"\n              style={{\n                backgroundColor: `${\n                  battery.charging ? \"rgba(0,255,0,0.5)\" : \"rgba(255,0,0,0.8)\"\n                }`,\n              }}\n            ></div>\n            Battery: {parseInt(battery.level * 100)}% (\n            {battery.charging ? \"Charging\" : \"Not charging\"})\n          </div>\n          <div className=\"dropdown-hr\"></div>\n          <div className=\"drop-down-items\" onClick={() => toggleFullScreen()}>\n            {isFullScreen ? \"Exit Full Screen\" : \"Enter Full Screen\"}\n          </div>\n          <div className=\"dropdown-hr\"></div>\n          <div className=\"drop-down-items cursor-pointer\">Log out</div>\n          <div\n            className=\"drop-down-items cursor-pointer\"\n            onClick={togglePowerDialog}\n          >\n            Power off\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  brightness: state.desktopReducers.brightness,\n  battery: state.desktopReducers.battery,\n  isOnline: state.desktopReducers.isOnline,\n  networkType: state.desktopReducers.networkType,\n  isFullScreen: state.desktopReducers.isFullScreen,\n});\n\nexport default connect(mapStateToProps, {\n  changeBrightness,\n  powerOffStatus,\n  toggleFullScreen,\n})(DropDown);\n","export default __webpack_public_path__ + \"static/media/wifi.1e81f944.svg\";","export default __webpack_public_path__ + \"static/media/battery.650b498e.svg\";","export default __webpack_public_path__ + \"static/media/lighting.591495bb.svg\";","export default __webpack_public_path__ + \"static/media/dropdown-white.0197f764.svg\";","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport DropDown from '../dropdown/dropdown';\nimport {\n  batteryStatus,\n  onlineStatus,\n  networkType,\n  dropDownToggle,\n  dateStatus,\n} from '../../../actions/desktopActions';\nimport Wifi from '../../../assets/icons/wifi.svg';\nimport Battery from '../../../assets/icons/battery.svg';\nimport Charging from '../../../assets/icons/lighting.svg';\nimport DropDownCaret from '../../../assets/icons/dropdown-white.svg';\n\nconst RightTaskPane = ({\n  battery,\n  dropDownOpen,\n  batteryStatus,\n  onlineStatus,\n  networkType,\n  dateStatus,\n  dropDownToggle,\n}) => {\n  const toggleDropDown = () => {\n    dropDownToggle(!dropDownOpen);\n  };\n  const getStatus = async () => {\n    // battery  status\n    let batteryObj;\n    if (navigator.getBattery) batteryObj = await navigator.getBattery();\n    else batteryObj = { level: 1, charging: true };\n    const { level, charging } = batteryObj;\n    batteryStatus({ level, charging });\n\n    //online status\n    onlineStatus(navigator.onLine);\n\n    // connection type\n    let connection =\n      navigator.connection ||\n      navigator.mozConnection ||\n      navigator.webkitConnection;\n\n    networkType(connection ? connection.effectiveType : 'Ksitm Alp');\n\n    // date status\n    dateStatus(new Date());\n\n    setTimeout(() => {\n      getStatus();\n    }, 5000);\n  };\n  useEffect(() => {\n    getStatus();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    <div className=\"right-task-item-container\">\n      <div onClick={toggleDropDown}>\n        <div className=\"right-displayed-container\">\n          <div className=\"centralise\">\n            <img src={Wifi} height=\"17px\" alt=\"Wifi\" />\n          </div>\n          <div className=\"centralise\">\n            {battery && battery.charging ? (\n              <img\n                src={Charging}\n                className=\"charging-icon\"\n                height=\"12px\"\n                alt=\"Charging\"\n              />\n            ) : null}\n          </div>\n          <div className=\"centralise\">\n            <img src={Battery} height=\"17px\" alt=\"Battery\" />\n          </div>\n          <div className=\"centralise\">\n            <div>{battery && parseInt(battery.level * 100)}%</div>\n          </div>\n          <div className=\"centralise\">\n            <div\n              className={`right-task-item ${\n                dropDownOpen ? 'drop-caret-up' : ''\n              }`}\n            >\n              <img src={DropDownCaret} alt=\"dropdown\" width=\"10px\" />\n            </div>\n          </div>\n        </div>\n        {dropDownOpen ? (\n          <div className=\"right-displayed-container-after\"></div>\n        ) : null}\n      </div>\n      {dropDownOpen && <DropDown />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  battery: state.desktopReducers.battery,\n  dropDownOpen: state.desktopReducers.dropDownOpen,\n});\n\nexport default connect(mapStateToProps, {\n  batteryStatus,\n  networkType,\n  onlineStatus,\n  dropDownToggle,\n  dateStatus,\n})(RightTaskPane);\n","import React from \"react\";\nimport TaskList from \"./taskList\";\nimport Date from \"./date\";\nimport RightTaskPane from \"./RightTaskPane\";\nimport \"../../../assets/desktop/taskbar.css\";\n\nconst Taskbar = () => {\n  return (\n    <div className=\"taskbar-container\">\n      <TaskList />\n      <Date />\n      <RightTaskPane />\n    </div>\n  );\n};\nexport default Taskbar;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../../../assets/desktop/powerOff.css\";\n\nconst PowerOff = ({ backImage, powerOff }) => {\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    if (powerOff.active) {\n      setTimeout(() => {\n        setIsActive(true);\n        setTimeout(() => {\n          window.close();\n        }, 4000);\n      }, powerOff.timer * 1000);\n    }\n  }, [powerOff]);\n\n  return (\n    <div\n      className={`power-off-container ${isActive ? \"\" : \"display-none\"} ${\n        backImage.cover ? \"image-cover\" : \"\"\n      }`}\n      style={{ backgroundImage: `url(${backImage.img})` }}\n    >\n      <div className=\"power-off-inner-container centralise\">\n        <div className=\"power-off-loader-container\">\n          <div className=\"centralise\">\n            <svg height=\"40px\" width=\"40px\" className=\"loader-rotate\">\n              <circle className=\"loader-lg\" />\n            </svg>\n          </div>\n          <div className=\"shutdown-loader-text centralise\">SHUTTING DOWN</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  powerOff: state.desktopReducers.powerOff,\n});\n\nexport default connect(mapStateToProps)(PowerOff);\n","export default __webpack_public_path__ + \"static/media/terminal.e7db1465.svg\";","export default __webpack_public_path__ + \"static/media/setting.664128e7.svg\";","export default __webpack_public_path__ + \"static/media/camera.2e279add.svg\";","import React, { useEffect, useState, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport { removeActivity } from '../../../actions/activityActions';\nimport { resetToDefault } from '../../../actions/desktopActions';\nimport {\n  makeDirectoryAction,\n  removeDirectoryAction,\n} from '../../../actions/fileSystemActions';\nimport '../../../assets/applications/terminal.css';\n\nconst OutputDivision = ({ inputPath, command, error, success, startState }) => {\n  if (startState)\n    return (\n      <>\n        <div className=\"terminal-main-content terminal-blue\">\n          Welcome to KSITM Alappuzha\n        </div>\n        <div className=\"terminal-output\">Type \"help\" for all the commands</div>\n      </>\n    );\n\n  return (\n    <div className=\"terminal-main-content\">\n      <span className=\"terminal-green\">Ksitm@Alp: </span>\n      <span className=\"terminal-blue\">{inputPath}$ </span>\n      <span className=\"terminal-text-editor\">{command}</span>\n      {error && <div className=\"terminal-output terminal-red\">{error}</div>}\n      {success && <div className=\"terminal-output\">{success}</div>}\n    </div>\n  );\n};\n\nconst TerminalWindow = ({\n  fileSystem,\n  activityList,\n  removeActivity,\n  makeDirectoryAction,\n  removeDirectoryAction,\n  resetToDefault,\n  supplement: { terminalLocation },\n}) => {\n  const printOutput = ({ inputPath, command, error, success, startState }) => {\n    let outputCommand = (\n      <OutputDivision\n        inputPath={inputPath}\n        command={command}\n        success={success}\n        error={error}\n        startState={startState}\n      />\n    );\n    setCommandOutput([...commandOutput, outputCommand]);\n  };\n  const [inputPath, setInputPath] = useState('/');\n  const [historyCommands, setHistoryCommand] = useState(['help']);\n  const [historyIndex, setHistoryIndex] = useState(0);\n  const [commandOutput, setCommandOutput] = useState([\n    <OutputDivision startState={true} />,\n  ]);\n  const TextRef = useRef(null);\n\n  const emptyTextRef = () => {\n    setTimeout(() => {\n      if (TextRef.current) TextRef.current.innerText = '';\n    }, 10);\n  };\n\n  const clearScreen = () =>\n    setCommandOutput([<OutputDivision startState={true} />]);\n\n  const echoOnScreen = ({ command, tokens, isSudo }) => {\n    if (isSudo) tokens.shift();\n    tokens.shift();\n    return printOutput({ inputPath, command, success: tokens.join(' ') });\n  };\n  const setInputPathConditionally = (pathArr) => {\n    pathArr = pathArr.filter((system) => !!system);\n    if (pathArr.length) setInputPath(`/${pathArr.join('/')}/`);\n    else setInputPath('/');\n  };\n  const changeDirectory = ({ command, tokens, isSudo }) => {\n    if (isSudo) tokens.shift();\n    try {\n      if (tokens.length > 2) {\n        return printOutput({\n          inputPath,\n          command,\n          error: `\"cd\" command can't have more than 1 parameter`,\n        });\n      } else {\n        if (tokens[1] === '/') {\n          setInputPath('/');\n          return printOutput({ inputPath, command });\n        }\n        let fullPath = inputPath.split('/').filter((path) => !!path);\n        let givenDirList = tokens[1].split('/').filter((path) => !!path);\n        for (let i in givenDirList) {\n          if (givenDirList[i] === '.') break;\n          else if (givenDirList[i] === '..') {\n            if (fullPath.length) fullPath.pop();\n            else\n              return printOutput({\n                inputPath,\n                command,\n                error: 'Already on the base directory',\n              });\n          } else fullPath.push(givenDirList[i]);\n        }\n        let curDir = fileSystem;\n        for (let j in fullPath) {\n          try {\n            curDir = curDir.find(\n              (dir) => dir.name === fullPath[j] && dir.type === 'folder'\n            );\n            curDir = curDir.child;\n          } catch (err) {\n            return printOutput({\n              inputPath,\n              command,\n              error: 'No such directory exists',\n            });\n          }\n        }\n        setInputPathConditionally(fullPath);\n        return printOutput({ inputPath, command });\n      }\n    } catch (err) {\n      printOutput({ inputPath, command, error: 'Please specify a folder' });\n    }\n  };\n  const exitTerminal = ({ command, tokens }) => {\n    if (tokens.length > 1) {\n      return printOutput({\n        inputPath,\n        command,\n        error: `\"exit\" command can't have more than 1 parameter`,\n      });\n    }\n    let activityIndex = activityList.findIndex(\n      (activity) => activity.name === 'Terminal'\n    );\n    removeActivity(activityIndex);\n  };\n  const HelpTerminal = ({ command }) => {\n    let childParameter = (\n      <div className=\"terminal-help-grid\">\n        {commandList.map((com, index) => (\n          <React.Fragment key={`command-list-${index}`}>\n            <div>{com.invoke}</div>\n            <div>-</div>\n            <div>{com.description}</div>\n          </React.Fragment>\n        ))}\n      </div>\n    );\n    return printOutput({ inputPath, command, success: childParameter });\n  };\n  const listInDirectory = ({ command }) => {\n    let pathArray = inputPath.split('/').filter((paths) => !!paths);\n    let childParameter;\n    try {\n      let currentDir = fileSystem;\n      pathArray.forEach(\n        (path) =>\n          (currentDir = currentDir.find((system) => system.name === path).child)\n      );\n      childParameter = (\n        <div className=\"terminal-file-system-grid\">\n          {currentDir.map((system, index) => (\n            <React.Fragment key={`file-system-${index}`}>\n              <div className={system.type === 'folder' ? 'terminal-blue' : ''}>\n                {system.name}\n              </div>\n            </React.Fragment>\n          ))}\n        </div>\n      );\n      return printOutput({ inputPath, command, success: childParameter });\n    } catch (err) {\n      return printOutput({\n        inputPath,\n        command,\n        error: 'No such directory exists',\n      });\n    }\n  };\n  const pwdCommand = ({ command }) =>\n    printOutput({ inputPath, command, success: inputPath });\n\n  const makeDirectory = ({ command, tokens, isSudo }) => {\n    if (isSudo) tokens.shift();\n    if (tokens.length > 2)\n      return printOutput({\n        inputPath,\n        command,\n        error: 'Folder name should not have space between them',\n      });\n    else if (tokens.length === 1)\n      return printOutput({\n        inputPath,\n        command,\n        error: 'Please specify a folder name',\n      });\n    else {\n      let pathArr = inputPath.split('/').filter((path) => !!path);\n      let curDir = fileSystem;\n      pathArr.forEach(\n        (path) => (curDir = curDir.find((system) => system.name === path).child)\n      );\n      let newFolderName = tokens[1];\n      let index = curDir.filter(\n        (system) => system.type === 'folder' && system.name === newFolderName\n      );\n      if (index.length > 0)\n        return printOutput({\n          inputPath,\n          command,\n          error: 'Folder with same name exist',\n        });\n      makeDirectoryAction({ pathArray: pathArr, folderName: newFolderName });\n      printOutput({ inputPath, command });\n    }\n  };\n  const removeDirectory = ({ command, tokens, isSudo }) => {\n    if (isSudo) tokens.shift();\n    if (tokens.length > 2)\n      return printOutput({\n        inputPath,\n        command,\n        error: 'Folder name should not have space between them',\n      });\n    else if (tokens.length === 1)\n      return printOutput({\n        inputPath,\n        command,\n        error: 'Please specify a folder name',\n      });\n    else {\n      let pathArr = inputPath.split('/').filter((path) => !!path);\n      let curDir = fileSystem;\n      pathArr.forEach(\n        (path) => (curDir = curDir.find((system) => system.name === path).child)\n      );\n      let newFolderName = tokens[1];\n      let index = curDir.filter(\n        (system) => system.type === 'folder' && system.name === newFolderName\n      );\n      if (index.length === 0)\n        return printOutput({\n          inputPath,\n          command,\n          error: 'Folder with the given name does not exist',\n        });\n      removeDirectoryAction({ pathArray: pathArr, folderName: newFolderName });\n      printOutput({ inputPath, command });\n    }\n  };\n  const resetCommand = ({ inputPath, command }) => {\n    printOutput({\n      inputPath,\n      command,\n      success: 'System settings and file system have been reset',\n    });\n    resetToDefault();\n  };\n\n  const commandList = [\n    {\n      invoke: 'help',\n      onActive: HelpTerminal,\n      description:\n        'Return the list of commands that you can run on terminal ',\n    },\n    {\n      invoke: 'eDistrict',\n       onActive: HelpTerminal,\n      description:\n        'Kerala E-District project intend to provide Government services to citizens through Common Service Centers(CSC) which are easily accessible.most of the Government to Citizen (G2C) interactions are taken place at District level. Districts, thus act as front-end windows of Government...',\n    },\n    {\n      invoke: 'eOffice',\n       onActive: HelpTerminal,\n      description:\n        'eOffice is a web application enabling the Government to automate the entire work flow of file processing starting from Tapal creation, File Creation, File processing and issuing orders from the file.',\n    },\n    {\n      invoke: 'ls',\n      onActive: listInDirectory,\n      description:\n        'Return the list of all files and folder in current or specified directory | One parameter (optional)',\n    },\n    \n   \n    {\n      invoke: 'exit',\n      onActive: exitTerminal,\n      description: 'Exits the terminal',\n    },\n  ];\n\n  const focusTextRef = () => TextRef.current.focus();\n  const keyPress = (e) => {\n    if (e.keyCode === 13) {\n      setHistoryIndex(0);\n      let command = TextRef.current.innerText;\n      setHistoryCommand([...historyCommands, command]);\n      let tokens = command.trim().replace(/\\s\\s+/g, ' ').split(' ');\n      let isSudo = false;\n      if (tokens[0] === 'sudo') isSudo = true;\n      else {\n        let commandObj = commandList.find(\n          (com) => com.invoke === tokens[0].toLowerCase()\n        );\n        if (commandObj) commandObj.onActive({ command, tokens, isSudo });\n        else\n          printOutput({\n            inputPath,\n            command,\n            error: `Error: \"${tokens[0]}\" is not a command`,\n          });\n      }\n      emptyTextRef();\n    } else if (e.keyCode === 38) {\n      let lastIndex = historyCommands.length - 1;\n      if (historyIndex === lastIndex) setHistoryIndex(lastIndex);\n      else setHistoryIndex(historyIndex + 1);\n      TextRef.current.innerText = historyCommands[lastIndex - historyIndex];\n    } else if (e.keyCode === 40) {\n      let lastIndex = historyCommands.length - 1;\n      if (historyIndex === 0) setHistoryIndex(0);\n      else setHistoryIndex(historyIndex - 1);\n      TextRef.current.innerText = historyCommands[lastIndex - historyIndex];\n    }\n  };\n  useEffect(() => {\n    focusTextRef();\n  }, []);\n  useEffect(() => {\n    if (terminalLocation && terminalLocation.length) {\n      let innerPath = terminalLocation.join('/');\n      setInputPath(`/${innerPath}/`);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      <div className=\"terminal-editable-container\" onClick={focusTextRef}>\n        <div>\n          {commandOutput.map((OutputComp, index) => (\n            <React.Fragment key={`output-division-${index}`}>\n              {OutputComp}\n            </React.Fragment>\n          ))}\n        </div>\n        <div className=\"terminal-main-content\">\n          <span className=\"terminal-green\">Ksitm@Alp: </span>\n          <span className=\"terminal-blue\">{inputPath}$ </span>\n          <span\n            contentEditable={true}\n            suppressContentEditableWarning={true}\n            className=\"terminal-text-editor\"\n            ref={TextRef}\n            onKeyDown={keyPress}\n          ></span>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fileSystem: state.fileSystemReducers.fileSystem,\n  activityList: state.activityReducers.activity,\n});\nexport default connect(mapStateToProps, {\n  removeActivity,\n  makeDirectoryAction,\n  removeDirectoryAction,\n  resetToDefault,\n})(TerminalWindow);\n","export default __webpack_public_path__ + \"static/media/search.ed847ece.svg\";","export default __webpack_public_path__ + \"static/media/home.0835ea67.svg\";","export default __webpack_public_path__ + \"static/media/wall-1.bc11ecc7.svg\";","export default __webpack_public_path__ + \"static/media/wall-2.392362fa.svg\";","export default __webpack_public_path__ + \"static/media/wall-3.d11f271d.svg\";","export default __webpack_public_path__ + \"static/media/wall-4.979850ed.svg\";","export default __webpack_public_path__ + \"static/media/wall-5.5cd0e1f8.svg\";","export default __webpack_public_path__ + \"static/media/wall-6.4defaddb.svg\";","import React, { useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeBackImage } from \"../../../../actions/desktopActions\";\nimport Back1 from \"../../../../assets/background/wall-1.svg\";\nimport Back2 from \"../../../../assets/background/wall-2.svg\";\nimport Back3 from \"../../../../assets/background/wall-3.svg\";\nimport Back4 from \"../../../../assets/background/wall-4.svg\";\nimport Back5 from \"../../../../assets/background/wall-5.svg\";\nimport Back6 from \"../../../../assets/background/wall-6.svg\";\n\nconst ThemeChanger = ({ background, changeBackImage }) => {\n  const themeArray = useMemo(\n    () => [\n      { name: \"Eternal\", img: Back1, cover: true },\n      { name: \"Temporal\", img: Back2, cover: true },\n      { name: \"Speck\", img: Back3, cover: false },\n      { name: \"Chime\", img: Back4, cover: true },\n      { name: \"Karma\", img: Back5, cover: true },\n      { name: \"Plates\", img: Back6, cover: false },\n    ],\n    []\n  );\n  return (\n    <>\n      <div className=\"theme-change-container\">\n        {themeArray.map((theme, index) => (\n          <div\n            className={`theme-change-division ${\n              background - 1 === index ? \"theme-change-division-active\" : \"\"\n            }`}\n            key={`theme-${index}`}\n            onClick={() => changeBackImage(index + 1)}\n          >\n            <div\n              className={`theme-change-background ${\n                theme.cover ? \"image-cover\" : \"\"\n              }`}\n              style={{\n                backgroundImage: `url(${theme.img})`,\n              }}\n            ></div>\n            <div className=\"theme-change-name\">{theme.name}</div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  background: state.desktopReducers.background,\n});\nexport default connect(mapStateToProps, { changeBackImage })(ThemeChanger);\n","import React, { useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeFontStyle } from \"../../../../actions/desktopActions\";\n\nconst FontChanger = ({ changeFontStyle, font }) => {\n  const fontStyleArray = useMemo(\n    () => [\n      { name: \"Roboto\", className: \"font-roboto\" },\n      { name: \"Potta One\", className: \"font-potta\" },\n      { name: \"Raleway\", className: \"font-raleway\" },\n      { name: \"Lobster\", className: \"font-lobster\" },\n      { name: \"Times\", className: \"font-times\" },\n      { name: \"Courier\", className: \"font-courier\" },\n    ],\n    []\n  );\n  return (\n    <>\n      <div className=\"theme-change-container\">\n        {fontStyleArray.map((fontStyle, index) => (\n          <div\n            className={`theme-change-division ${\n              font - 1 === index ? \"theme-change-division-active\" : \"\"\n            } ${fontStyle.className}`}\n            key={`theme-${index}`}\n            onClick={() => changeFontStyle(index + 1)}\n          >\n            <div className=\"theme-change-background centralise\">Aa</div>\n            <div className=\"theme-change-name\">{fontStyle.name}</div>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  font: state.desktopReducers.fontStyle,\n});\nexport default connect(mapStateToProps, { changeFontStyle })(FontChanger);\n","import React from 'react';\nimport '../../assets/common/toggleButton.css';\n\nconst ToggleButton = ({ toggleOn, toggleAction }) => {\n  return (\n    <div\n      className={`toggle-button-container ${\n        toggleOn ? 'toggle-button-container-active' : ''\n      }`}\n      onClick={toggleAction}\n    >\n      <div\n        className={`toggle-button ${toggleOn ? 'toggle-button-active' : ''}`}\n      ></div>\n    </div>\n  );\n};\n\nexport default ToggleButton;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  changeSingleClickIcon,\n  toggleFullScreen,\n} from \"../../../../actions/desktopActions\";\nimport ToggleButton from \"../../../common/ToggleButton\";\n\nconst Personalise = ({\n  singleClickIcon,\n  changeSingleClickIcon,\n  isFullScreen,\n  toggleFullScreen,\n}) => {\n  return (\n    <>\n      <div className=\"personalise-2-grid\">\n        <div className=\"personalise-text centralise\">\n          Desktop icons open on single click\n        </div>\n        <ToggleButton\n          toggleAction={() => changeSingleClickIcon(!singleClickIcon)}\n          toggleOn={singleClickIcon}\n        />\n      </div>\n      <div className=\"personalise-2-grid\">\n        <div className=\"personalise-text centralise\">Full Screen mode</div>\n        <ToggleButton\n          toggleAction={() => toggleFullScreen()}\n          toggleOn={isFullScreen}\n        />\n      </div>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  singleClickIcon: state.desktopReducers.singleClickIcon,\n  isFullScreen: state.desktopReducers.isFullScreen,\n});\nexport default connect(mapStateToProps, {\n  changeSingleClickIcon,\n  toggleFullScreen,\n})(Personalise);\n","import React, { useMemo, useState } from 'react';\nimport ThemeChanger from './components/ThemeChanger';\nimport FontChanger from './components/FontChanger';\nimport Personalise from './components/Personalise';\nimport { resetToDefault } from '../../../actions/desktopActions';\nimport DialogBox from '../../desktop/dialogBox/dialogBox';\nimport '../../../assets/applications/settings.css';\nimport { connect } from 'react-redux';\n\nconst Settings = ({ resetToDefault }) => {\n  const [settingIndex, setSettingIndex] = useState(0);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n\n  const settingsArray = useMemo(\n    () => [\n      { name: 'Theme', component: <ThemeChanger /> },\n      { name: 'Font Style', component: <FontChanger /> },\n      { name: 'Personalise', component: <Personalise /> },\n      {\n        name: 'Reset to Default',\n        onClick: () => setIsDialogOpen(true),\n      },\n    ],\n    []\n  );\n  const resetSuccess = () => {\n    setIsDialogOpen(false);\n    resetToDefault();\n  };\n  return (\n    <>\n      <DialogBox\n        onSuccess={resetSuccess}\n        onCancel={() => setIsDialogOpen(false)}\n        isOpen={isDialogOpen}\n        successText={'Reset'}\n        heading={'Reset Settings'}\n        body={'Sure! You want to reset to your default settings?'}\n      />\n      <div className=\"settings-container\">\n        <div className=\"settings-left-container\">\n          {settingsArray.map((settings, index) => (\n            <div\n              className={`settings-left-button ${\n                settingIndex === index ? 'settings-left-button-active' : ''\n              }`}\n              key={`settings-${index}`}\n              onClick={() =>\n                settings.component ? setSettingIndex(index) : settings.onClick()\n              }\n            >\n              {settings.name}\n            </div>\n          ))}\n        </div>\n        <div className=\"settings-right-container\">\n          <div className=\"settings-right-inner-container\">\n            <div className=\"settings-right-inner-container-header\">\n              {settingsArray[settingIndex].name}\n            </div>\n            <div className=\"settings-right-inner-container-bottom\">\n              {settingsArray[settingIndex].component}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default connect(null, { resetToDefault })(Settings);\n","export default __webpack_public_path__ + \"static/media/accops.8a0cdc89.svg\";","export default __webpack_public_path__ + \"static/media/view_timeline.346cf996.svg\";","export default __webpack_public_path__ + \"static/media/vmeet.c2aee6b5.svg\";","export default __webpack_public_path__ + \"static/media/archive.c5d0eb1b.svg\";","import React from 'react';\nimport TerminalImage from '../assets/icons/terminal.svg';\nimport CameraImage from '../assets/icons/camera.svg';\n// import BrowserImage from '../assets/icons/browser.svg';\nimport SettingsImage from '../assets/icons/setting.svg';\nimport TerminalWindow from '../components/applications/terminal/terminal';\nimport Camera from '../components/applications/camera/camera';\nimport Browser from '../components/applications/browser/browser';\nimport Settings from '../components/applications/settings/settings';\nimport timeline from '../assets/icons/view_timeline.svg';\nimport  accops from '../assets/icons/accops.svg';\nimport vmeet from '../assets/icons/vmeet.svg';\n// import rustdesk from '../assets/icons/Rustdesk.svg';\n\n\n// import PROFILE_IMAGE from '../assets/icons/profile.svg';\n// import PROJECT_IMAGE from '../assets/icons/project.svg';\nimport ARCHIVE_IMAGE from '../assets/icons/archive.svg';\nimport GITHUB_IMAGE from '../assets/icons/octocat.svg';\nimport GITLAB_IMAGE from '../assets/icons/gitlab.svg';\n// import FACEBOOK_IMAGE from '../assets/icons/facebook.svg';\n// import TWITTER_IMAGE from '../assets/icons/twitter.svg';\n// import INSTAGRAM_IMAGE from '../assets/icons/instagram.svg';\n// import LINKEDIN_IMAGE from '../assets/icons/linkedin.svg';\n// import CODEPEN_IMAGE from '../assets/icons/codepen.svg';\n// import GMAIL_IMAGE from '../assets/icons/gmail.svg';\n// import MEDIUM_IMAGE from '../assets/icons/medium.svg';\n\n\n// const nullFunction = (supplement) => null;\nconst width1 = '40px';\nconst width2 = '50px';\nconst width3 = '60px';\nconst width4 = '70px';\n\nexport const applications = {\n  allApplications: [\n    // {\n    //   name: 'Firefox',\n    //   image: BrowserImage,\n    //   width: width2,\n    //   bigWidth: width4,\n    //   key: 'firefox',\n    //   child: (supplement) => <Browser supplement={supplement} />,\n    // },\n\n    // {\n    //   name: 'Rustdesk',\n    //   image: rustdesk,\n    //   width: width1,\n    //   bigWidth: width3,\n    //   key: 'rustdesk',\n    //   child: (supplement) => <Camera supplement={supplement} />,\n    // },\n   \n    {\n      name: 'Settings',\n      image: SettingsImage,\n      width: width2,\n      bigWidth: width4,\n      key: 'settings',\n      child: (supplement) => <Settings supplement={supplement} />,\n    },\n    {\n      name: 'Terminal',\n      image: TerminalImage,\n      width: width1,\n      bigWidth: width3,\n      key: 'terminal',\n      child: (supplement) => (\n        <TerminalWindow\n          supplement={supplement}\n          // supplement={{ terminalLocation: [\"desktop\"] }}\n        />\n      ),\n      // footer: nullFunction,\n    },\n  ],\n  socialApps: [\n    // {\n    //   name: 'Archive',\n    //   key: 'archive',\n    //   image: ARCHIVE_IMAGE,\n    //   width: width1,\n    //   bigWidth: width3,\n    //   link: 'https://archive.raghavdhingra.com',\n    // },\n    // {\n    //   name: 'Portfolio',\n    //   key: 'portfolio',\n    //   width: width1,\n    //   bigWidth: width3,\n    //   image: PROFILE_IMAGE,\n    //   link: 'https://portfolio.raghavdhingra.com',\n    // },\n    // {\n    //   name: 'Projects',\n    //   key: 'projects',\n    //   width: width1,\n    //   bigWidth: width3,\n    //   image: PROJECT_IMAGE,\n    //   link: 'https://portfolio.raghavdhingra.com/projects',\n    // },\n    {\n      name: 'Accops',\n      key: 'accops',\n      width: width2,\n      bigWidth: width3,\n      image: accops,\n      link: 'https://103.135.130.197',\n    },\n    {\n      name: 'V- MEET',\n      key: 'vmeet',\n      width: width1,\n      bigWidth: width3,\n      image: vmeet,\n      link: 'https://vmeet.kerala.gov.in/login',\n    },\n    {\n      name: 'GitHub',\n      key: 'github',\n      width: width1,\n      bigWidth: width3,\n      image: GITHUB_IMAGE,\n      link: 'https://github.com/',\n    },\n    {\n      name: 'Gitlab',\n      key: 'gitlab',\n      width: width1,\n      bigWidth: width3,\n      image: GITLAB_IMAGE,\n      link: 'https://about.gitlab.com/',\n    },\n    // {\n    //   name: 'Facebook',\n    //   key: 'facebook',\n    //   width: width1,\n    //   bigWidth: width3,\n    //   image: FACEBOOK_IMAGE,\n    //   link: 'https://www.facebook.com/raghav.dhingra15',\n    // },\n    // {\n    //   name: 'Twitter',\n    //   key: 'twitter',\n    //   width: width1,\n    //   bigWidth: width3,\n    //   image: TWITTER_IMAGE,\n    //   link: 'https://twitter.com/raghavdhingra15',\n    // },\n    // {\n    //   name: 'Instagram',\n    //   key: 'instagram',\n    //   width: width1,\n    //   bigWidth: width3,\n    //   image: INSTAGRAM_IMAGE,\n    //   link: 'https://www.instagram.com/raghav.dhingra15/',\n    // },\n    // {\n    //   name: 'Linkedin',\n    //   key: 'linkedin',\n    //   width: width1,\n    //   bigWidth: width3,\n    //   image: LINKEDIN_IMAGE,\n    //   link: 'https://www.linkedin.com/in/raghav-dhingra/',\n    // },\n    // {\n    //   name: 'Codepen',\n    //   key: 'codepen',\n    //   width: width1,\n    //   bigWidth: width3,\n    //   image: CODEPEN_IMAGE,\n    //   link: 'https://codepen.io/raghav-dhingra',\n    // },\n    // {\n    //   name: 'GMail',\n    //   key: 'gmail',\n    //   width: width1,\n    //   bigWidth: width3,\n    //   image: GMAIL_IMAGE,\n    //   link: 'mailto:admin@raghavdhingra.com',\n    // },\n    // {\n    //   name: 'Medium',\n    //   key: 'medium',\n    //   width: width1,\n    //   bigWidth: width3,\n    //   image: MEDIUM_IMAGE,\n    //   link: 'https://medium.com/@raghav.dhingra15',\n    // },\n  ],\n  defaultApps: [\n    {\n      name: 'Terminal',\n      image: TerminalImage,\n      width: width1,\n      key: 'terminal',\n      child: (supplement) => (\n        <TerminalWindow\n          supplement={supplement}\n          // supplement={{ terminalLocation: [\"desktop\"] }}\n        />\n      ),\n      // footer: nullFunction,\n    },\n    // {\n    //   name: 'Browser',\n    //   image: BrowserImage,\n    //   width: width2,\n    //   key: 'browser',\n    //   child: (supplement) => <Browser supplement={supplement} />,\n    // },\n    // {\n    //   name: 'Camera',\n    //   image: rustdesk,\n    //   width: width1,\n    //   key: 'camera',\n    //   child: (supplement) => <Camera supplement={supplement} />,\n    // },\n    {\n      name: 'Settings',\n      image: SettingsImage,\n      width: width2,\n      key: 'settings',\n      child: (supplement) => <Settings supplement={supplement} />,\n    },\n  ],\n};\n","export default __webpack_public_path__ + \"static/media/octocat.69eb8a94.svg\";","export default __webpack_public_path__ + \"static/media/gitlab.05a335ec.svg\";","import { applications } from './defaultApps';\nimport * as actions from './types';\n\nexport const createActivity = (payload) => async (dispatch) => {\n  try {\n    let { name, newApp } = payload;\n    let app;\n    if (newApp) {\n      let { image, footer, child } = payload;\n      app = {\n        name,\n        image,\n        width: '40px',\n        key: name,\n        child,\n        footer,\n      };\n    } else {\n      app = applications.defaultApps.find((app) => app.key === name);\n    }\n    await dispatch({\n      type: actions.CREATE_ACTIVITY,\n      payload: {\n        activity: {\n          name: app.name,\n          isLoading: false,\n          date: new Date(),\n          isExplorerOpened: false,\n          isMaximise: false,\n          child: app.child,\n          footer: app.footer,\n          image: app.image,\n          zIndex: 4,\n          top: '34px',\n          left: '60px',\n          height: '500px',\n          width: '750px',\n          triggeredFunction: false,\n        },\n      },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from \"react\";\n\nconst NavItem = ({ children, clickTask, hightlight }) => {\n  return (\n    <>\n      <div\n        className={`left-nav-item centralise ${\n          hightlight ? \"left-nav-item-active\" : \"\"\n        }`}\n        onClick={clickTask}\n      >\n        {children}\n      </div>\n    </>\n  );\n};\nexport default NavItem;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../../../assets/desktop/desktopIcon.css\";\n\nconst DesktopIcon = ({ name, icon, width, clickTask, singleClickIcon }) => {\n  return (\n    <div\n      className=\"desktop-icon-container\"\n      onClick={singleClickIcon ? clickTask : () => null}\n      onDoubleClick={!singleClickIcon ? clickTask : () => null}\n    >\n      <div className=\"desktop-icon\">\n        <img src={icon} width={width} alt={name} style={{ margin: \"0 auto\" }} />\n        <div className=\"desktop-icon-text\">{name}</div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  singleClickIcon: state.desktopReducers.singleClickIcon,\n});\nexport default connect(mapStateToProps)(DesktopIcon);\n","import React, { useEffect, useRef } from \"react\";\n\nconst ContextMenu = ({ isOpen, top, left, close, height, contextArray }) => {\n  const contextMenuRef = useRef(null);\n  useEffect(() => {\n    window.addEventListener(\"click\", (e) => {\n      try {\n        if (!contextMenuRef.current.contains(e.target)) close();\n      } catch (err) {\n        return null;\n      }\n    });\n  }, [close]);\n  const contextTaskPerform = (task) => {\n    task.onClick();\n    close();\n  };\n  if (isOpen)\n    return (\n      <>\n        <div\n          ref={contextMenuRef}\n          className=\"context-menu-container\"\n          style={{ top: `${top}px`, left: `${left}px`, height: `${height}px` }}\n        >\n          {contextArray && contextArray.length\n            ? contextArray.map((context, index) => (\n                <div\n                  className=\"context-menu-content\"\n                  key={`context-${index}`}\n                  onClick={() => contextTaskPerform(context)}\n                >\n                  {context.name}\n                </div>\n              ))\n            : null}\n        </div>\n      </>\n    );\n  else return null;\n};\n\nexport default ContextMenu;\n","export default __webpack_public_path__ + \"static/media/file.31b0dc00.svg\";","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  updateZIndexActivity,\n  removeActivity,\n  toggleActivityMaximise,\n  updatePositionActivity,\n  updateDimensionActivity,\n} from \"../../../actions/activityActions\";\nimport fileImage from \"../../../assets/icons/file.svg\";\nimport \"../../../assets/desktop/explorer.css\";\n\nconst Explorer = ({\n  activity,\n  updateZIndexActivity,\n  updateDimensionActivity,\n  explorerIndex,\n  removeActivity,\n  toggleActivityMaximise,\n  updatePositionActivity,\n}) => {\n  const explorerRef = useRef(null);\n  const elementToDrag = useRef(null);\n\n  const updateZIndex = () => updateZIndexActivity(explorerIndex);\n  const closeActivity = () => removeActivity(explorerIndex);\n\n  // const updateDimension = (height, width) =>\n  //   updateDimensionActivity({ height, width, activityIndex: explorerIndex });\n\n  const dragElement = useCallback(() => {\n    try {\n      let pos1 = 0,\n        pos2 = 0,\n        pos3 = 0,\n        pos4 = 0;\n      if (explorerRef.current)\n        explorerRef.current.addEventListener(\"mousedown\", () =>\n          dragMouseDown()\n        );\n      else\n        elementToDrag.current.addEventListener(\"mousedown\", () =>\n          dragMouseDown()\n        );\n      function dragMouseDown(e) {\n        try {\n          e = e || window.event;\n          e.preventDefault();\n          pos3 = e.clientX;\n          pos4 = e.clientY;\n          document.onmouseup = closeDragElement;\n          document.onmousemove = elementDrag;\n        } catch (err) {\n          return null;\n        }\n      }\n      function elementDrag(e) {\n        try {\n          e = e || window.event;\n          e.preventDefault();\n          // calculate the new cursor position:\n          pos1 = pos3 - e.clientX;\n          pos2 = pos4 - e.clientY;\n          pos3 = e.clientX;\n          pos4 = e.clientY;\n          // set the element's new position:\n          let elementHeight = elementToDrag.current.offsetHeight;\n          let elementWidth = elementToDrag.current.offsetWidth;\n          let elementTopOffset = elementToDrag.current.offsetTop;\n          let elementLeftOffset = elementToDrag.current.offsetLeft;\n          let topVal = elementTopOffset - pos2;\n          let leftVal = elementLeftOffset - pos1;\n\n          // Condition For Keeping Explorer in Window\n          if (topVal < 34) topVal = 34;\n          if (leftVal < 60) leftVal = 60;\n\n          let windowHeight = window.innerHeight;\n          let windowWidth = window.innerWidth;\n\n          if (topVal + elementHeight > windowHeight)\n            topVal = windowHeight - elementHeight;\n\n          if (leftVal + elementWidth > windowWidth)\n            leftVal = windowWidth - elementWidth;\n          updatePositionActivity({\n            top: topVal,\n            left: leftVal,\n            activityIndex: explorerIndex,\n          });\n        } catch (err) {\n          return null;\n        }\n      }\n      function closeDragElement() {\n        // stop moving when mouse button is released:\n        document.onmouseup = null;\n        document.onmousemove = null;\n      }\n    } catch (err) {\n      return null;\n    }\n  }, [updatePositionActivity, explorerIndex]);\n  const toggleMaximise = () =>\n    toggleActivityMaximise({\n      activityIndex: explorerIndex,\n      isMaximise: !activity.isMaximise,\n    });\n\n  useEffect(() => {\n    if (!activity.isMaximise) dragElement();\n  }, [dragElement, activity]);\n  return (\n    <div\n      className=\"explorer-container\"\n      style={{\n        top: activity.isMaximise ? \"34px\" : activity.top,\n        left: activity.isMaximise ? \"60px\" : activity.left,\n        height: activity.isMaximise ? \"calc(100vh - 35px)\" : activity.height,\n        width: activity.isMaximise ? \"calc(100vw - 62px)\" : activity.width,\n        zIndex: activity.zIndex,\n      }}\n      ref={elementToDrag}\n      onMouseDown={updateZIndex}\n    >\n      <div className=\"explorer-header\">\n        <div\n          className=\"explorer-header-heading\"\n          onDoubleClick={toggleMaximise}\n          ref={explorerRef}\n        >\n          <div className=\"explorer-heading-name-icon-container\">\n            <div className=\"centralise\">\n              <img\n                src={activity && activity.image ? activity.image : fileImage}\n                height=\"15px\"\n                width=\"15px\"\n                alt=\"explorer heading\"\n              />\n            </div>\n            <div className=\"centralise\">\n              <span>{activity && activity.name}</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"explorer-header-btn-container\">\n          <div className=\"explorer-close-btn\">-</div>\n          <div className=\"explorer-close-btn\" onClick={toggleMaximise}>\n            <svg height=\"18px\" width=\"18px\">\n              <rect\n                x=\"6px\"\n                y=\"6px\"\n                height=\"6px\"\n                width=\"6px\"\n                fill=\"#0000\"\n                strokeWidth=\"1.5px\"\n                stroke=\"#fff\"\n              ></rect>\n            </svg>\n          </div>\n          <div\n            className=\"explorer-close-btn explorer-close-color\"\n            onClick={closeActivity}\n          >\n            <div className=\"explorer-close-icon-translate\">&times;</div>\n          </div>\n        </div>\n      </div>\n      <div className=\"explorer-body\">\n        {activity && activity.child({ activity })}\n      </div>\n      {activity && activity.footer ? (\n        <div className=\"explorer-footer\">{activity.footer}</div>\n      ) : null}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  activityList: state.activityReducers.activity,\n});\n\nexport default connect(mapStateToProps, {\n  updateZIndexActivity,\n  removeActivity,\n  toggleActivityMaximise,\n  updatePositionActivity,\n  updateDimensionActivity,\n})(Explorer);\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeTextInFile } from \"../../../actions/fileSystemActions\";\n\nconst TextEditor = ({ system, fileSystem, changeTextInFile }) => {\n  const textAreaRef = useRef(null);\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => textAreaRef.current.focus(), []);\n  useEffect(() => {\n    let curDir = fileSystem.fileSystem;\n    system.location.forEach(\n      (path) => (curDir = curDir.find((system) => system.name === path).child)\n    );\n    let changedFile = curDir.find((sys) => system.name === sys.name);\n    setText(changedFile.child);\n  }, [fileSystem, system]);\n  const changeText = (e) =>\n    changeTextInFile({\n      pathArray: system.location,\n      name: system.name,\n      child: e.target.value,\n    });\n\n  return (\n    <>\n      <textarea\n        ref={textAreaRef}\n        value={text}\n        onChange={changeText}\n        className=\"text-area-editor\"\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  fileSystem: state.fileSystemReducers,\n});\nexport default connect(mapStateToProps, { changeTextInFile })(TextEditor);\n","export default __webpack_public_path__ + \"static/media/folder.668d1600.svg\";","import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport DesktopIcon from './desktopIcon';\nimport ContextMenu from './ContextMenu';\nimport { connect } from 'react-redux';\nimport Explorer from '../explorer/explorer';\nimport TextEditor from '../../applications/textEditor/textEditor';\nimport FOLDER_IMAGE from '../../../assets/icons/folder.svg';\nimport FILE_IMAGE from '../../../assets/icons/file.svg';\nimport { createActivity } from '../../../actions/createActivityAction';\nimport '../../../assets/desktop/desktopWorkingArea.css';\nimport {\n  resetToDefault,\n  changeStartMenu,\n  toggleFullScreen,\n} from '../../../actions/desktopActions';\nimport DialogBox from '../dialogBox/dialogBox';\nimport {\n  makeDirectoryAction,\n  makeFileAction,\n} from '../../../actions/fileSystemActions';\n\nconst LinkFooter = ({ system }) => {\n  return (\n    <div className=\"link-footer\">\n      Open in new Tab:{' '}\n      <a href={system.link} target=\"_blank\" rel=\"noreferrer\">\n        {system.link}\n      </a>\n    </div>\n  );\n};\nconst IframeContainer = ({ system }) => {\n  return (\n    <iframe\n      src={system.link}\n      title={system.name}\n      className=\"portfolio-container-iframe\"\n    />\n  );\n};\n\nconst DesktopWorkingArea = ({\n  activityList,\n  fileSystems,\n  createActivity,\n  resetToDefault,\n  makeFileAction,\n  makeDirectoryAction,\n  isFullScreen,\n  toggleFullScreen,\n  isStartMenuOpen,\n  changeStartMenu,\n}) => {\n  const desktopWorkingRef = useRef(null);\n  const [newDir, setNewDir] = useState({\n    open: false,\n    isFolder: false,\n    name: '',\n  });\n  const [contextShown, setContextShown] = useState(false);\n  const [resetSettingsOpen, setResetSettingsOpen] = useState(false);\n  const [contextPosition, setContextPosition] = useState({ top: 0, left: 0 });\n  const [workingAreaHeight, setWorkingAreaHeight] = useState(0);\n  useEffect(() => {\n    if (desktopWorkingRef && desktopWorkingRef.current)\n      setWorkingAreaHeight(desktopWorkingRef.current.clientHeight);\n  }, [desktopWorkingRef]);\n  const contextMenuHeight = 238;\n\n  const contextArray = [\n    { name: 'Menu', onClick: () => changeStartMenu(!isStartMenuOpen) },\n    { name: 'Terminal', onClick: () => createActivity({ name: 'terminal' }) },\n    // {\n    //   name: 'New File',\n    //   onClick: () => setNewDir({ open: true, isFolder: false, name: '' }),\n    // },\n    // {\n    //   name: 'New Folder',\n    //   onClick: () => setNewDir({ open: true, isFolder: true, name: '' }),\n    // },\n    {\n      name: 'Customise Display',\n      onClick: () => createActivity({ name: 'settings' }),\n    },\n    {\n      name: isFullScreen ? 'Exit Full Screen' : 'Enter Full Screen',\n      onClick: () => toggleFullScreen(),\n    },\n    { name: 'Reset Settings', onClick: () => setResetSettingsOpen(true) },\n  ];\n\n  const resetSuccess = () => {\n    setResetSettingsOpen(false);\n    resetToDefault();\n  };\n  const iconChanger = (system) => {\n    return system.icon\n      ? system.icon\n      : system.type === 'folder'\n      ? FOLDER_IMAGE\n      : FILE_IMAGE;\n  };\n  const startTask = (system) => {\n    if (system.type === 'file') {\n      if (system.link) {\n        if (system.inPage) {\n          createActivity({\n            name: system.name,\n            newApp: true,\n            image: iconChanger(system),\n            footer: <LinkFooter system={system} />,\n            child: () => <IframeContainer system={system} />,\n          });\n        } else {\n          window.open(system.link);\n        }\n      } else {\n        createActivity({\n          name: system.name,\n          newApp: true,\n          image: iconChanger(system),\n          footer: <>Auto Save</>,\n          child: () => <TextEditor system={system} />,\n        });\n      }\n    } else {\n      // File Explorer Event\n      console.log('Open File Explorer');\n    }\n  };\n  useEffect(() => {\n    desktopWorkingRef.current.addEventListener('contextmenu', (e) => {\n      try {\n        e.preventDefault();\n        setContextShown(false);\n        setTimeout(() => {\n          setContextShown(true);\n          let posX = e.clientX;\n          let posY = e.clientY;\n          let winWidth = window.innerWidth;\n          let winHeight = window.innerHeight;\n          if (winWidth - 235 < posX) posX = winWidth - 235;\n          if (winHeight - (contextMenuHeight + 5) < posY)\n            posY = winHeight - (contextMenuHeight + 5);\n          setContextPosition({ top: posY, left: posX });\n        }, 50);\n      } catch (err) {\n        return null;\n      }\n    });\n  }, []);\n  const makeNewDir = () => {\n    if (newDir.name) {\n      if (newDir.isFolder)\n        makeDirectoryAction({\n          pathArray: ['desktop'],\n          folderName: newDir.name,\n        });\n      else\n        makeFileAction({\n          pathArray: ['desktop'],\n          fileName: newDir.name,\n        });\n      setNewDir({ ...newDir, name: '', open: false, isFolder: false });\n    } else alert('Please Enter a name');\n  };\n  const renderDesktopIcons = useCallback(\n    ({ allIcons }) => {\n      let desktopIconHTML = [];\n      let outerIconsArray = [];\n      if (workingAreaHeight) {\n        let desktopIcons = [...allIcons[0].child];\n        let numberOfIcons = parseInt((workingAreaHeight - 30) / 90) - 1;\n        if (desktopIcons.length > numberOfIcons) {\n          let initialSplitIndex = 0;\n          let numOfSplits = Math.ceil(desktopIcons.length / numberOfIcons);\n          for (let i = 1; i <= numOfSplits; i++) {\n            let arr = desktopIcons.splice(\n              initialSplitIndex,\n              initialSplitIndex + numberOfIcons\n            );\n            outerIconsArray.push(arr);\n          }\n        } else outerIconsArray.push(desktopIcons);\n        desktopIconHTML = outerIconsArray.map((desktopIcon, ind) => (\n          <div key={`outer-icons-${ind}`}>\n            {desktopIcon.map(\n              (system, index) =>\n                system && (\n                  <DesktopIcon\n                    key={`desktop-icon-${index}`}\n                    icon={iconChanger(system)}\n                    name={system.name}\n                    width={'60px'}\n                    clickTask={() => startTask(system)}\n                  />\n                )\n            )}\n          </div>\n        ));\n      }\n      return <>{desktopIconHTML}</>;\n    },\n    // eslint-disable-next-line\n    [workingAreaHeight]\n  );\n  return (\n    // No Parent component Other than the main div\n    <div className=\"desktop-area-container\" ref={desktopWorkingRef}>\n      <DialogBox\n        onSuccess={resetSuccess}\n        onCancel={() => setResetSettingsOpen(false)}\n        isOpen={resetSettingsOpen}\n        successText={'Reset'}\n        heading={'Reset Settings'}\n        body={'Sure! You want to reset to your default settings?'}\n      />\n      <DialogBox\n        onSuccess={makeNewDir}\n        onCancel={() => setNewDir(false)}\n        isOpen={newDir.open}\n        successText={'Save'}\n        heading={`New ${newDir.isFolder ? 'Folder' : 'File'}`}\n        body={\n          <input\n            type=\"text\"\n            className=\"new-file-folder-input\"\n            placeholder={`${newDir.isFolder ? 'Folder' : 'File'} Name`}\n            onChange={(e) => setNewDir({ ...newDir, name: e.target.value })}\n          />\n        }\n      />\n      <ContextMenu\n        isOpen={contextShown}\n        close={() => setContextShown(false)}\n        top={contextPosition.top}\n        left={contextPosition.left}\n        contextArray={contextArray}\n        height={contextMenuHeight}\n      />\n      {activityList.map(\n        (activity, index) =>\n          activity && (\n            <Explorer\n              explorerIndex={index}\n              activity={activity}\n              key={`explorer-${index}`}\n            />\n          )\n      )}\n      {fileSystems &&\n        fileSystems.fileSystem &&\n        fileSystems.fileSystem.length &&\n        renderDesktopIcons({\n          allIcons: fileSystems.fileSystem,\n        })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  activityList: state.activityReducers.activity,\n  isFullScreen: state.desktopReducers.isFullScreen,\n  isStartMenuOpen: state.desktopReducers.isStartMenuOpen,\n  fileSystems: state.fileSystemReducers,\n});\n\nexport default connect(mapStateToProps, {\n  createActivity,\n  makeDirectoryAction,\n  resetToDefault,\n  toggleFullScreen,\n  makeFileAction,\n  changeStartMenu,\n})(DesktopWorkingArea);\n","import React from 'react';\n\nconst StartItem = ({ children, clickTask }) => {\n  return (\n    <>\n      <div className={`start-menu-item centralise`} onClick={clickTask}>\n        {children}\n      </div>\n    </>\n  );\n};\nexport default StartItem;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { applications } from '../../../actions/defaultApps';\nimport { createActivity } from '../../../actions/createActivityAction';\nimport SEARCH_ICON from '../../../assets/icons/search.svg';\nimport StartItem from './startItem';\nimport { changeStartMenu } from '../../../actions/desktopActions';\nimport '../../../assets/desktop/startMenu.css';\n\nconst StartMenu = ({ createActivity, changeStartMenu }) => {\n  const searchRef = useRef(null);\n  const [searchString, setSearchString] = useState('');\n  const [applicationArray, setApplicationArray] = useState([]);\n  const [startSection, setStartSection] = useState('application');\n\n  const focusOnField = () => {\n    searchRef.current.focus();\n  };\n  useEffect(() => {\n    if (startSection === 'application') {\n      if (searchString) {\n        let searchedApps = applications.allApplications.map((app) => {\n          let searchRegexKey = new RegExp(searchString.trim(), 'ig');\n          if (searchRegexKey.test(app.key)) return app;\n          else return null;\n        });\n        setApplicationArray([...searchedApps]);\n      } else setApplicationArray([...applications.allApplications]);\n    } else if (startSection === 'social') {\n      if (searchString) {\n        let searchedApps = applications.socialApps.map((app) => {\n          let searchRegexKey = new RegExp(searchString.trim(), 'ig');\n          if (searchRegexKey.test(app.key)) return app;\n          else return null;\n        });\n        setApplicationArray([...searchedApps]);\n      } else setApplicationArray([...applications.socialApps]);\n    } else return null;\n  }, [searchString, startSection]);\n  useEffect(() => {\n    focusOnField();\n    setApplicationArray([...applications.allApplications]);\n  }, []);\n  const startItemClick = (app) => {\n    if (startSection === 'application') {\n      createActivity({ name: app.key });\n      changeStartMenu(false);\n    } else if (startSection === 'social') {\n      window.open(app.link);\n    } else {\n      return null;\n    }\n  };\n  return (\n    <div className=\"start-menu-container\">\n      <div className=\"container-center\">\n        <div className=\"start-menu-container-grid\">\n          <div className=\"search-field-container\">\n            <div className=\"search-field-grid\">\n              <div className=\"centralise search-bar-icon-container\">\n                <img\n                  src={SEARCH_ICON}\n                  alt=\"search\"\n                  width=\"15px\"\n                  onClick={focusOnField}\n                  className=\"search-bar-icon\"\n                />\n              </div>\n              <input\n                type=\"text\"\n                className=\"search-field\"\n                placeholder=\"Type to search\"\n                ref={searchRef}\n                value={searchString}\n                onChange={(e) => setSearchString(e.target.value)}\n              />\n            </div>\n          </div>\n          <div>\n            <div className=\"start-application-container\">\n              {applicationArray && applicationArray.length ? (\n                applicationArray.map(\n                  (app, index) =>\n                    app && (\n                      <StartItem\n                        key={`nav-list-${index}`}\n                        clickTask={() => startItemClick(app)}\n                      >\n                        <img\n                          src={app.image}\n                          className=\"nav-item-image\"\n                          width={app.bigWidth}\n                          alt={app.name}\n                        />\n                        <div>{app.name}</div>\n                      </StartItem>\n                    )\n                )\n              ) : (\n                <div>No Application Found</div>\n              )}\n            </div>\n          </div>\n          <div className=\"start-menu-footer-grid\">\n            <div\n              className={`start-menu-footer-item ${\n                startSection === 'application'\n                  ? 'start-menu-footer-item-active'\n                  : ''\n              }`}\n              onClick={() => setStartSection('application')}\n            >\n              Applications\n            </div>\n            <div\n              className={`start-menu-footer-item\n            ${startSection === 'social' ? 'start-menu-footer-item-active' : ''}\n            `}\n              onClick={() => setStartSection('social')}\n            >\n              Social\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  // background: state.desktopReducers.background,\n});\n\nexport default connect(mapStateToProps, { createActivity, changeStartMenu })(\n  StartMenu\n);\n","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  dropDownToggle,\n  activityDropDownToggle,\n  changeStartMenu,\n} from '../../../actions/desktopActions';\nimport { createActivity } from '../../../actions/createActivityAction';\nimport NavItem from './navItem';\nimport DesktopWorkingArea from '../desktopWorkingArea/desktopWorkingArea';\nimport { applications } from '../../../actions/defaultApps';\nimport StartMenu from '../startMenu/startMenu';\nimport '../../../assets/desktop/lowerDesktop.css';\n\nconst LowerDesktop = ({\n  activityDropDown,\n  dropDownOpen,\n  dropDownToggle,\n  activityDropDownToggle,\n  createActivity,\n  isStartMenuOpen,\n  changeStartMenu,\n  activityList,\n}) => {\n  const closeDropDown = () => {\n    if (dropDownOpen || activityDropDown) {\n      dropDownToggle(false);\n      activityDropDownToggle(false);\n    }\n  };\n  const hightlightApp = useCallback(\n    (name) => {\n      let isShown = false;\n      activityList.forEach((act) => {\n        if (act.name === name) isShown = true;\n      });\n      return isShown;\n    },\n    [activityList]\n  );\n\n  return (\n    <div className='lower-desktop-grid' onClick={closeDropDown}>\n      <div className='left-navigation-bar'>\n        <div>\n          {applications.defaultApps.map((app, index) => (\n            <NavItem\n              key={`nav-list-${index}`}\n              clickTask={() => {\n                changeStartMenu(false);\n                createActivity({ name: app.key });\n              }}\n              hightlight={hightlightApp(app.name)}\n            >\n              <img\n                src={app.image}\n                className='nav-item-image'\n                width={app.width}\n                alt={app.name}\n              />\n            </NavItem>\n          ))}\n        </div>\n        <div>\n          <NavItem hightlight={isStartMenuOpen}>\n            <svg\n              height='50px'\n              width='50px'\n              className='start-icon-container'\n              onClick={() => changeStartMenu(!isStartMenuOpen)}\n            >\n              <circle cx='25px' cy='25px' className='start-icon-svg' />\n            </svg>\n          </NavItem>\n        </div>\n      </div>\n      {isStartMenuOpen ? <StartMenu /> : <DesktopWorkingArea />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  dropDownOpen: state.desktopReducers.dropDownOpen,\n  activityDropDown: state.desktopReducers.activityDropDown,\n  isStartMenuOpen: state.desktopReducers.isStartMenuOpen,\n  activityList: state.activityReducers.activity,\n});\nexport default connect(mapStateToProps, {\n  dropDownToggle,\n  createActivity,\n  activityDropDownToggle,\n  changeStartMenu,\n})(LowerDesktop);\n","import React, { useEffect, useMemo } from \"react\";\nimport { connect } from \"react-redux\";\nimport { changeBackImage, changeFontStyle } from \"../../actions/desktopActions\";\nimport { previousStateSet } from \"../../actions/fileSystemActions\";\nimport Taskbar from \"./taskbar/taskbar\";\nimport PowerOff from \"./powerOff/powerOff\";\nimport LowerDesktop from \"./lowerDesktop/lowerDesktop.jsx\";\nimport Back1 from \"../../assets/background/wall-1.svg\";\nimport Back2 from \"../../assets/background/wall-2.svg\";\nimport Back3 from \"../../assets/background/wall-3.svg\";\nimport Back4 from \"../../assets/background/wall-4.svg\";\nimport Back5 from \"../../assets/background/wall-5.svg\";\nimport Back6 from \"../../assets/background/wall-6.svg\";\nimport \"../../assets/desktop/desktop.css\";\n\nconst Desktop = ({\n  brightness,\n  background,\n  fontStyle,\n  previousStateSet,\n  isFullScreen,\n}) => {\n  useEffect(() => {\n    previousStateSet();\n  }, [previousStateSet]);\n  const backgroundArray = useMemo(\n    () => [\n      { img: Back1, cover: true },\n      { img: Back2, cover: true },\n      { img: Back3, cover: false },\n      { img: Back4, cover: true },\n      { img: Back5, cover: true },\n      { img: Back6, cover: false },\n    ],\n    []\n  );\n  const fontStyleArray = useMemo(\n    () => [\n      { name: \"Roboto\", className: \"font-roboto\" },\n      { name: \"Potta One\", className: \"font-potta\" },\n      { name: \"Raleway\", className: \"font-raleway\" },\n      { name: \"Lobster\", className: \"font-lobster\" },\n      { name: \"Times\", className: \"font-times\" },\n      { name: \"Courier\", className: \"font-courier\" },\n    ],\n    []\n  );\n  useEffect(() => {\n    const fullScrrenToggle = async () => {\n      try {\n        if (isFullScreen) {\n          let bodyE = document.documentElement;\n          if (bodyE.requestFullscreen) await document.body.requestFullscreen();\n          else if (bodyE.msRequestFullscreen)\n            await document.body.msRequestFullscreen();\n          else if (bodyE.webkitRequestFullscreen)\n            await document.body.webkitRequestFullscreen();\n          else if (bodyE.mozRequestFullScreen)\n            await document.body.mozRequestFullScreen();\n        } else {\n          if (document.exitFullscreen) await document.exitFullscreen();\n          else if (document.webkitExitFullscreen)\n            await document.webkitExitFullscreen();\n          else if (document.msExitFullscreen) await document.msExitFullscreen();\n        }\n      } catch (err) {\n        return null;\n      }\n    };\n    fullScrrenToggle();\n  }, [isFullScreen]);\n  return (\n    <>\n      <div\n        className={`desktop-container ${\n          backgroundArray[background - 1].cover ? \"image-cover\" : \"\"\n        } ${fontStyleArray[fontStyle - 1].className}`}\n        style={{\n          backgroundImage: `url(${backgroundArray[background - 1].img})`,\n          filter: `brightness(${brightness})`,\n        }}\n      >\n        <div className=\"desktop-taskbar-grid\">\n          <Taskbar />\n          <LowerDesktop />\n        </div>\n      </div>\n      <PowerOff backImage={backgroundArray[background - 1]} />\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  background: state.desktopReducers.background,\n  brightness: state.desktopReducers.brightness,\n  fontStyle: state.desktopReducers.fontStyle,\n  isFullScreen: state.desktopReducers.isFullScreen,\n});\n\nexport default connect(mapStateToProps, {\n  changeBackImage,\n  changeFontStyle,\n  previousStateSet,\n})(Desktop);\n","import * as actions from \"../actions/types\";\n\nconst initialState = {\n  triggerIndex: -1,\n  isTriggered: false,\n  activity: [],\n};\n\nconst activityReducers = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case actions.CREATE_ACTIVITY: {\n      let { activity } = payload;\n      return { ...state, activity: [...state.activity, activity] };\n    }\n    case actions.UPDATE_ACTIVITY_TRIGGER: {\n      let { activityIndex, isTriggered } = payload;\n      return { ...state, triggerIndex: activityIndex, isTriggered };\n    }\n    case actions.REMOVE_ACTIVITY_TRIGGER: {\n      return { ...state, triggerIndex: -1, isTriggered: false };\n    }\n    case actions.REMOVE_ACTIVITY: {\n      let { activityIndex } = payload;\n      state.activity.splice(activityIndex, 1);\n      return { ...state, activity: [...state.activity] };\n    }\n    case actions.UPDATE_ZINDEX_ACTIVITY: {\n      let { activityIndex } = payload;\n      state.activity.forEach((act) => (act.zIndex = 2));\n      state.activity[activityIndex] = {\n        ...state.activity[activityIndex],\n        zIndex: 3,\n      };\n      return { ...state, activity: [...state.activity] };\n    }\n    case actions.TOGGLE_LOADING_ACTIVITY: {\n      let { activityIndex, isLoading } = payload;\n      state.activity[activityIndex] = {\n        ...state.activity[activityIndex],\n        isLoading,\n      };\n      return { ...state, activity: [...state.activity] };\n    }\n    case actions.TOGGLE_ACTIVITY_MAXIMISE: {\n      let { activityIndex, isMaximise } = payload;\n      state.activity[activityIndex] = {\n        ...state.activity[activityIndex],\n        isMaximise,\n      };\n      return { ...state, activity: [...state.activity] };\n    }\n    case actions.UPDATE_ACTIVITY_POSITION: {\n      let { top, left, activityIndex } = payload;\n      state.activity[activityIndex] = {\n        ...state.activity[activityIndex],\n        top,\n        left,\n      };\n      return { ...state, activity: [...state.activity] };\n    }\n    case actions.UPDATE_ACTIVITY_DIMENSION: {\n      let { height, width, activityIndex } = payload;\n      state.activity[activityIndex] = {\n        ...state.activity[activityIndex],\n        height,\n        width,\n      };\n      return { ...state, activity: [...state.activity] };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default activityReducers;\n","import * as actions from \"../actions/types\";\n\nconst initialState = {\n  background: 3,\n  fontStyle: 1,\n  brightness: 1,\n  dropDownOpen: false,\n  singleClickIcon: true,\n  isFullScreen: false,\n  isStartMenuOpen: false,\n  battery: {\n    level: 0,\n    charging: false,\n  },\n  isOnline: true,\n  networkType: \"Ksitm Alp\",\n  date: new Date(),\n  activityDropDown: false,\n  powerOff: {\n    active: false,\n    timer: 0,\n  },\n};\nconst localSave = (key, val) => localStorage.setItem(key, JSON.stringify(val));\n\nconst desktopReducers = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case actions.TOGGLE_DROP_DOWN: {\n      let { dropDownOpen } = payload;\n      return { ...state, dropDownOpen };\n    }\n    case actions.TOGGLE_START_MENU: {\n      let { startMenuOpen } = payload;\n      return { ...state, isStartMenuOpen: startMenuOpen };\n    }\n    case actions.TOGGLE_FULL_SCREEN: {\n      return { ...state, isFullScreen: !state.isFullScreen };\n    }\n    case actions.PREVIOUS_STATE_SET: {\n      let previousState = JSON.parse(localStorage.getItem(\"desktop\"));\n      if (previousState) return { ...previousState, date: new Date() };\n      else return state;\n    }\n    case actions.SINGLE_CLICK_ICON_CHANGE: {\n      let { singleClickIcon } = payload;\n      let newState = { ...state, singleClickIcon };\n      localSave(\"desktop\", newState);\n      return newState;\n    }\n    case actions.RESET_TO_DEFAULT: {\n      return {\n        ...state,\n        background: 3,\n        brightness: 1,\n        fontStyle: 1,\n        dropDownOpen: false,\n        activityDropDown: false,\n        singleClickIcon: true,\n        isFullScreen: false,\n      };\n    }\n    case actions.BACK_IMAGE_CHANGE: {\n      let { background } = payload;\n      let newState = { ...state, background };\n      localSave(\"desktop\", newState);\n      return newState;\n    }\n    case actions.FONT_STYLE_CHANGE: {\n      let { fontStyle } = payload;\n      let newState = { ...state, fontStyle };\n      localSave(\"desktop\", newState);\n      return newState;\n    }\n    case actions.BRIGHTNESS_CHANGE: {\n      let { brightness } = payload;\n      let newState = { ...state, brightness };\n      localSave(\"desktop\", newState);\n      return newState;\n    }\n    case actions.BATTERY_STATUS: {\n      let { battery } = payload;\n      return { ...state, battery };\n    }\n    case actions.ONLINE_STATUS: {\n      let { isOnline } = payload;\n      return { ...state, isOnline };\n    }\n    case actions.NETWORK_TYPE: {\n      let { networkType } = payload;\n      return { ...state, networkType };\n    }\n    case actions.DATE_STATUS: {\n      let { date } = payload;\n      return { ...state, date };\n    }\n    case actions.ACTIVITY_TOGGLE_DROP_DOWN: {\n      let { activityDropDown } = payload;\n      return { ...state, activityDropDown };\n    }\n    case actions.POWER_OFF_STATUS: {\n      let { powerOff } = payload;\n      return { ...state, powerOff };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default desktopReducers;\n","import * as actions from \"../actions/types\";\nimport PROFILE_IMAGE from \"../assets/icons/profile.svg\";\nimport PROJECT_IMAGE from \"../assets/icons/project.svg\";\nimport ARCHIVE_IMAGE from \"../assets/icons/archive.svg\";\nimport firefox from \"../assets/icons/browser.svg\";\nimport dc from '../assets/icons/downcenter.svg';\nimport watch from '../assets/icons/watch.svg';\nimport calendar from '../assets/icons/calendar.svg';\n\nconst initialState = {\n  fileSystem: [\n    {\n      name: \"desktop\",\n      type: \"folder\",\n      location: [],\n      child: [\n        // {\n        //   name: \"Portfolio\",\n        //   type: \"file\",\n        //   icon: PROFILE_IMAGE,\n        //   link: \"https://portfolio.raghavdhingra.com\",\n        //   inPage: true,\n        //   location: [\"desktop\"],\n        // },\n        // {\n        //   name: \"Projects\",\n        //   type: \"file\",\n        //   icon: PROJECT_IMAGE,\n        //   link: \"https://portfolio.raghavdhingra.com/projects\",\n        //   inPage: true,\n        //   location: [\"desktop\"],\n        // },\n       \n        {\n          name: \"eDistrict\",\n          type: \"file\",\n          icon: ARCHIVE_IMAGE,\n          link: \"https://village.ksitmalappuzha.in\",\n          inPage: false,\n          location: [\"desktop\"],\n        },\n        {\n          name: \"eOffice\",\n          type: \"file\",\n          icon: ARCHIVE_IMAGE,\n          link: \"https://eoffice.ksitmalappuzha.in\",\n          inPage: false,\n          location: [\"desktop\"],\n        },\n        \n        {\n          name: \"Firefox\",\n          type: \"file\",\n          icon: firefox,\n          link: \"https://theekurukkan.ksitmalappuzha.in\",\n          inPage: false,\n          location: [\"desktop\"],\n        },\n        {\n          name:\"DC\",\n          type: \"file\",\n          icon: dc,\n          link: \"https://downcenter.ksitmalappuzha.in/\",\n          inPage: false,\n          location: [\"desktop\"],\n        },\n        {\n          name:\"Timeline\",\n          type: \"file\",\n          icon: watch,\n          link: \"https://events.ksitmalappuzha.in/\",\n          inPage: false,\n          location: [\"desktop\"],\n        },\n        {\n          name:\"Calendar\",\n          type: \"file\",\n          icon: calendar,\n          link: \"https://calendar.ksitmalappuzha.in/\",\n          inPage: false,\n          location: [\"desktop\"],\n        },\n        // { name: \"docs\", type: \"file\", child: \"\", location: [\"desktop\"] },\n      ],\n    },\n    {\n      name: \"ksitmalp\",\n      type: \"folder\",\n      child: [],\n      location: [],\n    },\n    {\n      name: \"public\",\n      type: \"folder\",\n      child: [],\n      location: [],\n    },\n  ],\n};\nconst localSave = (key, val) => localStorage.setItem(key, JSON.stringify(val));\n\nconst fileSystemReducers = (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case actions.CHANGE_TEXT_IN_FILE: {\n      const { pathArray, name, child } = payload;\n      let curDir = state.fileSystem;\n      pathArray.forEach(\n        (path) => (curDir = curDir.find((system) => system.name === path).child)\n      );\n      let changedFile = curDir.find((system) => system.name === name);\n      changedFile.child = child;\n      localSave(\"fileSystem\", { ...state });\n      return { ...state };\n    }\n    case actions.MAKE_DIRECTORY_IN_SYSTEM: {\n      const { pathArray, folderName } = payload;\n      let curDir = state.fileSystem;\n      pathArray.forEach(\n        (path) => (curDir = curDir.find((system) => system.name === path).child)\n      );\n      let newFolder = {\n        name: folderName,\n        type: \"folder\",\n        child: [],\n        location: pathArray,\n      };\n      curDir.push(newFolder);\n      localSave(\"fileSystem\", { ...state });\n      return { ...state };\n    }\n    case actions.MAKE_FILE_IN_SYSTEM: {\n      const { pathArray, fileName } = payload;\n      let curDir = state.fileSystem;\n      pathArray.forEach(\n        (path) => (curDir = curDir.find((system) => system.name === path).child)\n      );\n      let newFile = {\n        name: fileName,\n        type: \"file\",\n        location: pathArray,\n        child: \"\",\n      };\n      curDir.push(newFile);\n      localSave(\"fileSystem\", { ...state });\n      return { ...state };\n    }\n    case actions.REMOVE_DIRECTORY_IN_SYSTEM: {\n      const { pathArray, folderName } = payload;\n      let newDirectory = [...state.fileSystem];\n      let curDir = newDirectory;\n      pathArray.forEach((path) => {\n        curDir = curDir = curDir.find((system) => system.name === path).child;\n      });\n      let index = curDir.findIndex((dir) => dir.name === folderName);\n\n      if (index === -1) return { ...state };\n      curDir.splice(index, 1);\n      localSave(\"fileSystem\", { ...state, fileSystem: [...newDirectory] });\n      return { ...state, fileSystem: [...newDirectory] };\n    }\n    case actions.PREVIOUS_STATE_SET: {\n      let previousState = JSON.parse(localStorage.getItem(\"fileSystem\"));\n      if (previousState) return { ...previousState };\n      else return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default fileSystemReducers;\n","export default __webpack_public_path__ + \"static/media/profile.0559e530.svg\";","export default __webpack_public_path__ + \"static/media/project.b4a71797.svg\";","export default __webpack_public_path__ + \"static/media/browser.143b0e55.svg\";","export default __webpack_public_path__ + \"static/media/downcenter.0e23fae0.svg\";","export default __webpack_public_path__ + \"static/media/watch.e87e4db2.svg\";","export default __webpack_public_path__ + \"static/media/calendar.7c7a4caf.svg\";","import { combineReducers } from \"redux\";\nimport activityReducers from \"./activityReducers\";\nimport desktopReducers from \"./desktopReducers\";\nimport fileSystemReducers from \"./fileSystemReducers\";\n\nexport default combineReducers({\n  activityReducers,\n  desktopReducers,\n  fileSystemReducers,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers/combinedReducers\";\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(...middleware)\n);\nexport default store;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Error404 from \"./components/notFound/error404\";\nimport Desktop from \"./components/desktop/Desktop\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./assets/default.css\";\n\nclass Router extends Component {\n  state = {};\n  render() {\n    return (\n      <>\n        <React.StrictMode>\n          <Provider store={store}>\n            <BrowserRouter>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Desktop />\n                </Route>\n                <Route component={Error404}></Route>\n              </Switch>\n            </BrowserRouter>\n          </Provider>\n        </React.StrictMode>\n      </>\n    );\n  }\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Router from './routes';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(<Router />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}